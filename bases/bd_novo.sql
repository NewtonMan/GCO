# phpMyAdmin SQL Dump
# version 3.2.0.1
# http://www.phpmyadmin.net
#
# Servidor: localhost
# Tempo de Geração: Dez 20, 2009 as 00:18
# Versão do Servidor: 5.1.37
# Versão do PHP: 5.3.0

#
# Banco de Dados: `gerenciador`
#

# ############################

#
# Estrutura da tabela `agenda`
#

CREATE TABLE IF NOT EXISTS `agenda` (
  `data` date NOT NULL,
  `hora` time NOT NULL,
  `codigo_dentista` varchar(11) NOT NULL,
  `codigo_paciente` int(10) default NULL,
  `descricao` varchar(90) default NULL,
  `procedimento` varchar(15) default NULL,
  `faltou` enum('Sim','Não') NOT NULL default 'Não',
  PRIMARY KEY  (`data`,`hora`,`codigo_dentista`)
) ENGINE=InnoDB;

# ############################

#
# Estrutura da tabela `agenda_obs`
#

CREATE TABLE IF NOT EXISTS `agenda_obs` (
  `data` date NOT NULL,
  `codigo_dentista` varchar(11) NOT NULL,
  `obs` longtext,
  PRIMARY KEY  (`data`,`codigo_dentista`)
) ENGINE=InnoDB;

# ############################

#
# Estrutura da tabela `agradecimentos`
#

CREATE TABLE `agradecimentos` (
  `agradecimento` TEXT NULL DEFAULT NULL ,
  `codigo_paciente` INT NOT NULL ,
  PRIMARY KEY ( `codigo_paciente` )
) ENGINE = InnoDB;

# ############################

#
# Estrutura da tabela `ajuda`
#

CREATE TABLE IF NOT EXISTS `ajuda` (
  `codigo` int(10) NOT NULL auto_increment,
  `topico` varchar(200) NOT NULL,
  `texto` text NOT NULL,
  PRIMARY KEY  (`codigo`)
) ENGINE=InnoDB;

#
# Extraindo dados da tabela `ajuda`
#

INSERT INTO `ajuda` (`codigo`, `topico`, `texto`) VALUES
(1, 'Dentistas', '<b><h3>Incluir Dentista</b></h3>\r\n<br>\r\n<br>\r\n<b>Caminho:</b> Arquivo > Dentistas > Incluir novo dentista\r\n<br>\r\n<br>\r\n<b><h3>Excluir Dentista</b></h3>\r\n<br><br>\r\n<b>Caminho:</b> Arquivo > Dentistas\r\n<br><br>\r\nDigite no campo "pesquisa" o nome do dentista a ser excluído do sistema. A direita do número do CRO, aparecerá a opção EXCLUIR. Confirme exclusão.\r\n<br>\r\n<br>\r\n<b><h3>Editar dados do Dentista</b></h3>\r\n<br><br>\r\n<b>Caminho:</b> Arquivo > Dentistas\r\n<br><br>\r\nDigite no campo "pesquisa" o nome do dentista que irá alterar as informações. A direita do número do CRO, aparecerá a opção EDITAR. Clique e confirme alterações.\r\n<br>\r\n<br>\r\n<b><h3>Procurar Dentista Cadastrado</b></h3>\r\n<br><br>\r\n<b>Caminho:</b> Arquivo > Dentistas\r\n<br><br>\r\nDigite no campo "pesquisa" o nome do dentista a ser procurado do sistema.\r\n<br>\r\n<br>\r\n<b><h3>Relatório Total dos Dentistas</b></h3>\r\n<br><br>\r\n<b>Caminho:</b> Arquivo > Dentistas\r\n<br><br>\r\nJá aparecerá, por padrão, todos dentistas cadastrados. Listagem por ordem alfabética.\r\n'),
(2, 'Funcionários', '<b><h3>Incluir Funcionário</b></h3>\r\n<br>\r\n<br>\r\n<b>Caminho:</b> Arquivo > Funcionários > Incluir novo funcionário\r\n<br>\r\n<br>\r\n<b><h3>Excluir Funcionário</b></h3>\r\n<br><br>\r\n<b>Caminho:</b> Arquivo > Funcionários\r\n<br><br>\r\nDigite no campo "pesquisa" o nome do funcionário a ser excluído do sistema. A direita da Função Principal, aparecerá a opção EXCLUIR. Confirme exclusão.\r\n<br>\r\n<br>\r\n<b><h3>Editar dados do Funcionário</b></h3>\r\n<br><br>\r\n<b>Caminho:</b> Arquivo > Funcionários\r\n<br><br>\r\nDigite no campo "pesquisa" o nome do funcionário que irá alterar as informações. A direita da Função Principal, aparecerá a opção EDITAR. Clique e confirme alterações.\r\n<br>\r\n<br>\r\n<b><h3>Procurar Funcionário Cadastrado</b></h3>\r\n<br><br>\r\n<b>Caminho:</b> Arquivo > Funcionários\r\n<br><br>\r\nDigite no campo "pesquisa" o nome do funcionário a ser procurado do sistema.\r\n<br>\r\n<br>\r\n<b><h3>Relatório Total dos Funcionários</b></h3>\r\n<br><br>\r\n<b>Caminho:</b> Arquivo > funcionários\r\n<br><br>\r\nJá aparecerá, por padrão, todos funcionários cadastrados. Listagem por ordem alfabética.'),
(3, 'Pacientes', '<b><h3>Incluir Paciente</b></h3>\r\n<br>\r\n<br>\r\n<b>Caminho:</b> Arquivo > Pacientes > Incluir novo paciente\r\n<br>\r\n<br>\r\n<b><h3>Excluir Paciente</b></h3>\r\n<br><br>\r\n<b>Caminho:</b> Arquivo > Pacientes\r\n<br><br>\r\nDigite no campo "pesquisa" o nome do paciente a ser excluído do sistema. A direita do número da ficha clínica \r\n\r\naparecerá a opção EXCLUIR. Confirme exclusão.\r\n<br>\r\n<br>\r\n<b><h3>Editar dados do Paciente</b></h3>\r\n<br><br>\r\n<b>Caminho:</b> Arquivo > Pacientes\r\n<br><br>\r\nDigite no campo "pesquisa" o nome do paciente que irá alterar as informações. A direita do número da ficha clínica \r\n\r\naparecerá a opção EDITAR. Clique e confirme alterações.\r\n<br>\r\n<br>\r\n<b><h3>Procurar Paciente Cadastrado</b></h3>\r\n<br><br>\r\n<b>Caminho:</b> Arquivo > Pacientes\r\n<br><br>\r\nDigite no campo "pesquisa" o nome do paciente a ser procurado do sistema.\r\n<br>\r\n<br>\r\n<b><h3>Relatório Total dos Pacientes</b></h3>\r\n<br><br>\r\n<b>Caminho:</b> Arquivo > Pacientes\r\n<br><br>\r\nJá aparecerá, por padrão, todos pacientes cadastrados. Listagem por ordem alfabética.');

# ############################

#
# Estrutura da tabela `arquivos`
#

CREATE TABLE IF NOT EXISTS `arquivos` (
  `codigo` int(20) NOT NULL auto_increment,
  `nome` varchar(20) NOT NULL,
  `descricao` varchar(255) NOT NULL,
  `tamanho` float NOT NULL,
  PRIMARY KEY  (`codigo`)
) ENGINE=InnoDB;

# ############################

#
# Estrutura da tabela `atestados`
#

CREATE TABLE IF NOT EXISTS `atestados` (
  `atestado` longtext,
  `codigo_paciente` int(11) NOT NULL,
  PRIMARY KEY  (`codigo_paciente`)
) ENGINE=InnoDB;

# ############################

#
# Estrutura da tabela `caixa`
#

CREATE TABLE IF NOT EXISTS `caixa` (
  `codigo` int(15) NOT NULL auto_increment,
  `data` date default NULL,
  `dc` enum('+','-') default NULL,
  `valor` float default NULL,
  `descricao` varchar(255) default NULL,
  PRIMARY KEY  (`codigo`)
) ENGINE=InnoDB;

# ############################

#
# Estrutura da tabela `caixa_dent`
#

CREATE TABLE IF NOT EXISTS `caixa_dent` (
  `codigo` int(15) NOT NULL auto_increment,
  `codigo_dentista` varchar(11) default NULL,
  `data` date default NULL,
  `dc` enum('+','-') default NULL,
  `valor` float default NULL,
  `descricao` varchar(255) default NULL,
  PRIMARY KEY  (`codigo`)
) ENGINE=InnoDB;

# ############################

#
# Estrutura da tabela `cheques`
#

CREATE TABLE IF NOT EXISTS `cheques` (
  `codigo` int(50) NOT NULL auto_increment,
  `valor` float default NULL,
  `nometitular` varchar(80) default NULL,
  `numero` varchar(50) default NULL,
  `banco` varchar(50) default NULL,
  `agencia` varchar(20) default NULL,
  `recebidode` varchar(80) default NULL,
  `encaminhadopara` varchar(80) default NULL,
  `compensacao` date default NULL,
  PRIMARY KEY  (`codigo`)
) ENGINE=InnoDB;

# ############################

#
# Estrutura da tabela `cheques_dent`
#

CREATE TABLE IF NOT EXISTS `cheques_dent` (
  `codigo` int(50) NOT NULL auto_increment,
  `codigo_dentista` varchar(11) NOT NULL,
  `valor` float default NULL,
  `nometitular` varchar(80) default NULL,
  `numero` varchar(50) default NULL,
  `banco` varchar(50) default NULL,
  `agencia` varchar(20) default NULL,
  `recebidode` varchar(80) default NULL,
  `encaminhadopara` varchar(80) default NULL,
  `compensacao` date default NULL,
  PRIMARY KEY  (`codigo`)
) ENGINE=InnoDB;

# ############################

#
# Estrutura da tabela `contaspagar`
#

CREATE TABLE IF NOT EXISTS `contaspagar` (
  `codigo` int(20) NOT NULL auto_increment,
  `datavencimento` date default NULL,
  `descricao` varchar(150) default NULL,
  `valor` float default NULL,
  `datapagamento` date default NULL,
  PRIMARY KEY  (`codigo`)
) ENGINE=InnoDB;

# ############################

#
# Estrutura da tabela `contaspagar_dent`
#

CREATE TABLE IF NOT EXISTS `contaspagar_dent` (
  `codigo` int(20) NOT NULL auto_increment,
  `codigo_dentista` varchar(11) default NULL,
  `datavencimento` date default NULL,
  `descricao` varchar(150) default NULL,
  `valor` float default NULL,
  `datapagamento` date default NULL,
  PRIMARY KEY  (`codigo`)
) ENGINE=InnoDB;

# ############################

#
# Estrutura da tabela `contasreceber`
#

CREATE TABLE IF NOT EXISTS `contasreceber` (
  `codigo` int(20) NOT NULL auto_increment,
  `datavencimento` date default NULL,
  `descricao` varchar(150) default NULL,
  `valor` float default NULL,
  `datapagamento` date default NULL,
  PRIMARY KEY  (`codigo`)
) ENGINE=InnoDB;

# ############################

#
# Estrutura da tabela `contasreceber_dent`
#

CREATE TABLE IF NOT EXISTS `contasreceber_dent` (
  `codigo` int(20) NOT NULL auto_increment,
  `codigo_dentista` varchar(11) default NULL,
  `datavencimento` date default NULL,
  `descricao` varchar(150) default NULL,
  `valor` float default NULL,
  `datapagamento` date default NULL,
  PRIMARY KEY  (`codigo`)
) ENGINE=InnoDB;

# ############################

#
# Estrutura da tabela `convenios`
#

CREATE TABLE IF NOT EXISTS `convenios` (
  `codigo` int(15) NOT NULL auto_increment,
  `nomefantasia` varchar(80) default NULL,
  `cpf` varchar(50) NOT NULL default '',
  `razaosocial` varchar(80) default NULL,
  `atuacao` varchar(80) default NULL,
  `endereco` varchar(150) default NULL,
  `bairro` varchar(40) default NULL,
  `cidade` varchar(40) default NULL,
  `estado` varchar(50) default NULL,
  `pais` varchar(50) default NULL,
  `cep` varchar(9) default NULL,
  `celular` varchar(15) default NULL,
  `telefone1` varchar(15) default NULL,
  `telefone2` varchar(15) default NULL,
  `inscricaoestadual` varchar(40) default NULL,
  `website` varchar(100) default NULL,
  `email` varchar(100) default NULL,
  `nomerepresentante` varchar(80) default NULL,
  `apelidorepresentante` varchar(50) default NULL,
  `emailrepresentante` varchar(100) default NULL,
  `celularrepresentante` varchar(15) default NULL,
  `telefone1representante` varchar(15) default NULL,
  `telefone2representante` varchar(15) default NULL,
  `banco` varchar(50) default NULL,
  `agencia` varchar(15) default NULL,
  `conta` varchar(15) default NULL,
  `favorecido` varchar(50) default NULL,
  PRIMARY KEY  (`codigo`)
) ENGINE=InnoDB;

INSERT INTO convenios (codigo, nomefantasia) VALUES (1, 'Particular');
INSERT INTO convenios (codigo, nomefantasia, cidade, estado, pais, cep) VALUES (2, 'Smile', 'Arcos', 'MG', 'Brasil', '35588-000');

# ############################

#
# Estrutura da tabela `dados_clinica`
#

CREATE TABLE IF NOT EXISTS `dados_clinica` (
  `cnpj` varchar(50) default NULL,
  `razaosocial` varchar(80) default NULL,
  `fantasia` varchar(90) default NULL,
  `proprietario` varchar(50) default NULL,
  `endereco` varchar(150) default NULL,
  `bairro` varchar(40) default NULL,
  `cidade` varchar(40) default NULL,
  `estado` varchar(50) default NULL,
  `pais` varchar(50) default NULL,
  `cep` varchar(9) default NULL,
  `fundacao` varchar(4) default NULL,
  `telefone1` varchar(13) default NULL,
  `telefone2` varchar(13) default NULL,
  `fax` varchar(13) default NULL,
  `email` varchar(100) default NULL,
  `web` varchar(100) default NULL,
  `banco1` varchar(50) default NULL,
  `agencia1` varchar(15) default NULL,
  `conta1` varchar(15) default NULL,
  `banco2` varchar(50) default NULL,
  `agencia2` varchar(15) default NULL,
  `conta2` varchar(15) default NULL,
  `idioma` varchar(50) default NULL,
  `logomarca` blob
) ENGINE=InnoDB;

#
# Extraindo dados da tabela `dados_clinica`
#

INSERT INTO `dados_clinica` (`cnpj`, `razaosocial`, `fantasia`, `proprietario`, `endereco`, `bairro`, `cidade`, `estado`, `pais`, `cep`, `fundacao`, `telefone1`, `telefone2`, `fax`, `email`, `web`, `banco1`, `agencia1`, `conta1`, `banco2`, `agencia2`, `conta2`, `logomarca`) VALUES
(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);

# ############################

#
# Estrutura da tabela `dentistas`
#

CREATE TABLE IF NOT EXISTS `dentistas` (
  `codigo` int(11) NOT NULL AUTO_INCREMENT,
  `nome` varchar(80) DEFAULT NULL,
  `cpf` varchar(50) DEFAULT NULL,
  `usuario` varchar(15) CHARACTER SET latin7 COLLATE latin7_general_cs DEFAULT NULL,
  `senha` varchar(32) DEFAULT NULL,
  `endereco` varchar(150) DEFAULT NULL,
  `bairro` varchar(50) DEFAULT NULL,
  `cidade` varchar(50) DEFAULT NULL,
  `estado` varchar(50) DEFAULT NULL,
  `pais` varchar(50) DEFAULT NULL,
  `cep` varchar(9) DEFAULT NULL,
  `nascimento` date DEFAULT NULL,
  `telefone1` varchar(15) DEFAULT NULL,
  `celular` varchar(15) DEFAULT NULL,
  `telefone2` varchar(15) DEFAULT NULL,
  `sexo` enum('Masculino','Feminino') NOT NULL,
  `nomemae` varchar(80) DEFAULT NULL,
  `rg` varchar(50) DEFAULT NULL,
  `email` varchar(100) DEFAULT NULL,
  `comissao` float DEFAULT NULL,
  `codigo_areaatuacao1` int(5) DEFAULT NULL,
  `codigo_areaatuacao2` int(5) DEFAULT NULL,
  `codigo_areaatuacao3` int(5) DEFAULT NULL,
  `conselho_tipo` varchar(30) DEFAULT NULL,
  `conselho_estado` varchar(30) DEFAULT NULL,
  `conselho_numero` varchar(30) DEFAULT NULL,
  `ativo` enum('Sim','Não') DEFAULT NULL,
  `data_inicio` date DEFAULT NULL,
  `data_fim` date DEFAULT NULL,
  `foto` blob,
  PRIMARY KEY (`codigo`)
) ENGINE=InnoDB;

# ############################

#
# Estrutura da tabela `dentista_atendimento`
#
CREATE TABLE dentista_atendimento (
  codigo_dentista int(11) NOT NULL,
  dia_semana tinyint(1) NOT NULL,
  hora_inicio time NOT NULL,
  hora_fim time NOT NULL,
  ativo tinyint(1) DEFAULT '1',
  PRIMARY KEY (codigo_dentista,dia_semana)
);

# ############################

#
# Estrutura da tabela `encaminhamentos`
#

CREATE TABLE `encaminhamentos` (
  `encaminhamento` TEXT NULL DEFAULT NULL ,
  `codigo_paciente` INT NOT NULL ,
  PRIMARY KEY ( `codigo_paciente` )
) ENGINE = InnoDB;

# ############################

#
# Estrutura da tabela `especialidades`
#

CREATE TABLE IF NOT EXISTS `especialidades` (
  `codigo` int(5) NOT NULL auto_increment,
  `descricao` varchar(100) NOT NULL,
  PRIMARY KEY  (`codigo`)
) ENGINE=InnoDB;

#
# Extraindo dados da tabela `especialidades`
#

INSERT INTO `especialidades` (`codigo`, `descricao`) VALUES
(1, 'Cirurgia e Traumatologia Buco Maxilo Faciais'),
(2, 'Clínica Geral'),
(3, 'Dentistica'),
(4, 'Dentistica Restauradora'),
(5, 'Disfuncao Temporo-Mandibular e Dor-Orofacial'),
(6, 'Endodontia'),
(7, 'Estomatologia'),
(8, 'Implantodontia'),
(9, 'Odontologia do Trabalho'),
(10, 'Odontologia em Saude Coletiva'),
(11, 'Odontologia Legal'),
(12, 'Odontologia para Pacientes com Necessidades Especiais'),
(13, 'Odontogeriatria'),
(14, 'Odontopediatria'),
(15, 'Ortodontia'),
(16, 'Ortodontia e Ortopedia Facial'),
(17, 'Ortopedia Funcional dos Maxilares'),
(18, 'Patologia Bucal'),
(19, 'Periodontia'),
(20, 'Protese Buco Maxilo Facial'),
(21, 'Protese Dentaria'),
(22, 'Radiologia'),
(23, 'Radiologia Odontologica e Imaginologia'),
(24, 'Saúde Coletiva');

# ############################

#
# Estrutura da tabela `estoque`
#

CREATE TABLE IF NOT EXISTS `estoque` (
  `codigo` int(15) NOT NULL auto_increment,
  `descricao` varchar(150) default NULL,
  `quantidade` varchar(25) default NULL,
  PRIMARY KEY  (`codigo`)
) ENGINE=InnoDB;

# ############################

#
# Estrutura da tabela `estoque_dent`
#

CREATE TABLE IF NOT EXISTS `estoque_dent` (
  `codigo` int(15) NOT NULL auto_increment,
  `codigo_dentista` varchar(11) default NULL,
  `descricao` varchar(150) default NULL,
  `quantidade` varchar(25) default NULL,
  PRIMARY KEY  (`codigo`)
) ENGINE=InnoDB;

# ############################

#
# Estrutura da tabela `evolucao`
#

CREATE TABLE IF NOT EXISTS `evolucao` (
  `codigo_paciente` int(10) NOT NULL,
  `codigo` int(10) NOT NULL auto_increment,
  `procexecutado` varchar(150) default NULL,
  `procprevisto` varchar(150) default NULL,
  `data` date default NULL,
  `codigo_dentista` varchar(11) default NULL,
  PRIMARY KEY  (`codigo`)
) ENGINE=InnoDB;

# ############################

#
# Estrutura da tabela `exameobjetivo`
#

CREATE TABLE IF NOT EXISTS `exameobjetivo` (
  `codigo_paciente` int(10) NOT NULL,
  `pressao` varchar(150) default NULL,
  `peso` varchar(150) default NULL,
  `altura` varchar(150) default NULL,
  `edema` varchar(150) default NULL,
  `face` varchar(150) default NULL,
  `atm` varchar(150) default NULL,
  `linfonodos` varchar(150) default NULL,
  `labio` varchar(150) default NULL,
  `mucosa` varchar(150) default NULL,
  `soalhobucal` varchar(150) default NULL,
  `palato` varchar(150) default NULL,
  `orofaringe` varchar(150) default NULL,
  `lingua` varchar(150) default NULL,
  `gengiva` varchar(150) default NULL,
  `higienebucal` varchar(150) default NULL,
  `habitosnocivos` varchar(150) default NULL,
  `aparelho` enum('Sim','Não') default NULL,
  `lesaointra` varchar(150) default NULL,
  `observacoes` text,
  PRIMARY KEY  (`codigo_paciente`)
) ENGINE=InnoDB;


# ############################

#
# Estrutura da tabela `exames`
#

CREATE TABLE IF NOT EXISTS `exames` (
  `exame` text,
  `codigo_paciente` int(11) NOT NULL,
  PRIMARY KEY  (`codigo_paciente`)
) ENGINE=InnoDB;

# ############################

#
# Estrutura da tabela `fornecedores`
#

CREATE TABLE IF NOT EXISTS `fornecedores` (
  `codigo` int(15) NOT NULL auto_increment,
  `nomefantasia` varchar(80) default NULL,
  `cpf` varchar(50) NOT NULL default '',
  `razaosocial` varchar(80) default NULL,
  `atuacao` varchar(80) default NULL,
  `endereco` varchar(150) default NULL,
  `bairro` varchar(40) default NULL,
  `cidade` varchar(40) default NULL,
  `estado` varchar(50) default NULL,
  `pais` varchar(50) default NULL,
  `cep` varchar(9) default NULL,
  `celular` varchar(15) default NULL,
  `telefone1` varchar(15) default NULL,
  `telefone2` varchar(15) default NULL,
  `inscricaoestadual` varchar(40) default NULL,
  `website` varchar(100) default NULL,
  `email` varchar(100) default NULL,
  `nomerepresentante` varchar(80) default NULL,
  `apelidorepresentante` varchar(50) default NULL,
  `emailrepresentante` varchar(100) default NULL,
  `celularrepresentante` varchar(15) default NULL,
  `telefone1representante` varchar(15) default NULL,
  `telefone2representante` varchar(15) default NULL,
  `banco` varchar(50) default NULL,
  `agencia` varchar(15) default NULL,
  `conta` varchar(15) default NULL,
  `favorecido` varchar(50) default NULL,
  PRIMARY KEY  (`codigo`)
) ENGINE=InnoDB;

# ############################

#
# Estrutura da tabela `fotospacientes`
#

CREATE TABLE IF NOT EXISTS `fotospacientes` (
  `codigo_paciente` int(10) NOT NULL,
  `codigo` int(10) NOT NULL auto_increment,
  `foto` mediumblob NOT NULL,
  `legenda` varchar(50) default NULL,
  PRIMARY KEY  (`codigo`)
) ENGINE=InnoDB;

# ############################

#
# Estrutura da tabela `foto_padrao`
#

CREATE TABLE IF NOT EXISTS `foto_padrao` (
  `foto` blob NOT NULL
) ENGINE=InnoDB;

#
# Extraindo dados da tabela `foto_padrao`
#

INSERT INTO `foto_padrao` (`foto`) VALUES
();

# ############################

#
# Estrutura da tabela `funcionarios`
#

CREATE TABLE IF NOT EXISTS `funcionarios` (
  `codigo` INT NOT NULL AUTO_INCREMENT,
  `nome` varchar(80) default NULL,
  `cpf` varchar(50) default NULL,
  `usuario` varchar(15) character set latin7 collate latin7_general_cs default NULL,
  `senha` varchar(32) default NULL,
  `rg` varchar(50) default NULL,
  `estadocivil` enum('solteiro','casado','divorciado','viuvo') default NULL,
  `endereco` varchar(150) default NULL,
  `bairro` varchar(50) default NULL,
  `cidade` varchar(50) default NULL,
  `estado` varchar(50) default NULL,
  `pais` varchar(50) default NULL,
  `cep` varchar(9) default NULL,
  `nascimento` date default NULL,
  `telefone1` varchar(15) default NULL,
  `telefone2` varchar(15) default NULL,
  `celular` varchar(15) default NULL,
  `sexo` enum('Masculino','Feminino') default NULL,
  `email` varchar(100) default NULL,
  `nomemae` varchar(80) default NULL,
  `nascimentomae` date default NULL,
  `nomepai` varchar(80) default NULL,
  `nascimentopai` date default NULL,
  `enderecofamiliar` varchar(220) default NULL,
  `funcao1` varchar(80) default NULL,
  `funcao2` varchar(80) default NULL,
  `admissao` date default NULL,
  `demissao` date default NULL,
  `observacoes` text,
  `ativo` enum('Sim','Não') default NULL,
  `foto` blob,
  PRIMARY KEY  (`codigo`)
) ENGINE=InnoDB;

#
# Extraindo dados da tabela `funcionarios`
#

INSERT INTO `funcionarios` (`codigo`, `nome`, `cpf`, `usuario`, `senha`, `rg`, `estadocivil`, `endereco`, `bairro`, `cidade`, `estado`, `pais`, `cep`, `nascimento`, `telefone1`, `telefone2`, `celular`, `sexo`, `email`, `nomemae`, `nascimentomae`, `nomepai`, `nascimentopai`, `enderecofamiliar`, `funcao1`, `funcao2`, `admissao`, `demissao`, `observacoes`, `ativo`, `foto`) VALUES
(1, 'Administrador', '11111111111', 'admin', 'e10adc3949ba59abbe56e057f20f883e', '', 'solteiro', '', '', '', 'MG', 'Brasil', '', NULL, '', '', '', 'Masculino', '', '', NULL, '', NULL, '', 'Administrador da clínica', '', NULL, NULL, '', 'Sim', '');

-- --------------------------------------------------------

--
-- Estrutura da tabela `honorarios`
--

CREATE TABLE IF NOT EXISTS `honorarios` (
  `codigo` varchar(10) NOT NULL DEFAULT '',
  `procedimento` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`codigo`)
) ENGINE=InnoDB;

INSERT INTO `honorarios` (`codigo`, `procedimento`) VALUES
('EX001', 'Consulta inicial: exame clínico e plano de tratamento'),
('EX002', 'Urgência: noturna, sábado, domingos e feriados'),
('EX003', 'Avaliação técnica: perícia inicial ou final'),
('EX004', 'Falta a consulta'),
('DE001', 'Restauração de Amálgama - 1 Face'),
('DE002', 'Restauração de Amálgama - 2 Face'),
('DE003', 'Restauração de Amálgama - 3 Faces'),
('DE005', 'Restauração de Amálgama - Pim'),
('DE004', 'Restauração  de almálgama - 4 Faces'),
('DE006', 'Restauração Resina Folopolimerizável - 1 Face'),
('DE007', 'Restauração Resina Fotopolimerizável - 2 Face'),
('DE009', 'Restauraçao Resina Fotopolimerizável - 4 Face'),
('DE010', 'Faceta em Resina Fotopolimerizável'),
('DE011', 'Núcleo de Preenchimento em Ionômero de Viddro'),
('DE012', 'Núcleo de Preenchimento em Resina Folopolimerizável'),
('DE014', 'Núcleo de Preenchimento em Almálgama'),
('DE016', 'Pino de Retenção Intradicular'),
('DE017', 'Clareamento de Dente Vitalizado ( por Elemento )'),
('DE018', 'Restauração Inlay e Onlay (Arglas-Solidex)'),
('DE019', 'Clareamento  de Dente Vitalizado e Desvitalizado com Moldeiras de Uso Caseiro (por arcada)'),
('DE020', 'Restauração Metálica Fundida'),
('DE021', 'Restauração Temporária'),
('EN002', 'Tratamento Endodôntico Pré-Molares (não inclue radiografias)'),
('EN003', 'Tratamento Endodôntico Molar (não inclue radiografias)'),
('EN004', 'Retratamento Endodôntico Incisivo ou Canino (não inclue radiografias)'),
('EN005', 'Retratamento Endodôntico Pré- Molar (não inclue radiografias)'),
('EN001', 'Tratamento Endodôntico Incisivo ou Canino (não inclue radiografias)'),
('DE022', 'Clareamento Dental em Consultório - Técnica com peróxido de carbamida a 35% - Dente Unitário'),
('OD001', 'Aplicação Tópica de Flúor-Verniz ( quatro hemiarcadas )'),
('OD002', 'Aplicação de Salante ( por elemento)'),
('OD003', 'Aplicação de Salante- Téorica Invasiva (por elemento)'),
('OD004', 'Aplicação Cariostático 1 Sessão ( quatro hemiarcadas)'),
('DE015', 'Ajuste Oclusal ( por sessão )'),
('DE008', 'Restauraçao Resina Fotopolimerizável - 3 Face'),
('DE013', 'Restauração Inlay Onlay de Porcelana'),
('EN006', 'Retratamento do Molar (não inclue radiografias)'),
('EN008', 'Remoção de Núcleo Intrarradicular (por elemento) (não inclue radiografias)'),
('EN009', 'Capeamento Pulpar (excluindo restauração final)'),
('EN010', 'Pulpotomia'),
('EN011', 'Clareamento Dental em consultório-Técnica com peróxido de carbamida a 35% por d'),
('EN012', 'Preparo para Núcleo Intrarradicular'),
('EN014', 'Urgência Endodôntico Pulpectoma (Indenpente da sequência do tratamento)'),
('EN015', 'Apicectomia de Caninos ou Incisivos (não inclue radiografias)'),
('EN016', 'Apicectomia de Caninos -Incisivos com Obturação Retrograda (não inclue radiografias)'),
('EN013', 'Tratamento de Dentes Rizogênese Incompleta (por sessão)'),
('EN007', 'Tratademento de Perfuração (não inclue radiografias)'),
('EN017', 'Apicectomia Pré-Molares (não inclue radiografias)'),
('EN018', 'Apicectomia Pré-Molares com obturação retrograda (não inclue radiografias)'),
('EN019', 'Apicectomia de Molares (não inclue radiografias)'),
('EN020', 'Apicectomia de Molares com obturação retrogada (não inclue radiografias)'),
('EN021', 'Remoção de Corpo estranho intracanal por conduto'),
('EN022', 'Curativo de demora'),
('EN023', 'Reembasamento provisório'),
('EN024', 'Restauração Temporária'),
('OD005', 'Remineralização- Fluorterapia (quatro sessões)'),
('OD006', 'Adequação do Meio Bucal com Iônomero de Vidro (por hemiarcada)'),
('OD007', 'Adequação do Meio Bucal com IRM (por hemiarcada)'),
('OD008', 'Restauração a Iônomero de vidro (1 face)'),
('OD009', 'Restauraão Preventiva (iônomero + selante)'),
('OD011', 'Pulpotomia'),
('OD012', 'Tratamento Endodôntico em Decidios (não inclue as radiografias)'),
('OD013', 'Exdontia de Dentes Decídios'),
('OD014', 'Mantenedor de Espaço'),
('OD015', 'Placa de Mordida'),
('OD017', 'Condicionamento Odontopediatria (por sessão)'),
('OD018', 'Ulotomia'),
('OD019', 'Utlectomia'),
('OD020', 'Restauração Temporária'),
('OD010', 'Coroa de Aço'),
('OD016', 'Plano Inclinado'),
('PE001', 'Tratamento Não Cirúrgico da Periodontite Leve (por segmento) Baixo Risco'),
('PE002', 'Tratamento Não Cirúrgico da Periodontite Moderado  (Por Segmento) Médio Risco'),
('PE003', 'Tramento Não Cirúrgico da Periodontite Grave (Por Segmento) Alto Risco'),
('PE004', 'Tratamento de Processo Agudo (por sessão)'),
('PE005', 'Controle de Placa Bacteriana (por sessão)'),
('PE006', 'Dessensilização Dentária (por segmento)'),
('PE007', 'Imobilização Dentária Com Resina Fotopolimerizável (dentes)'),
('PE008', 'Ajuste Oclusal ( por sessão )'),
('PE010', 'Placa de  Mordida Miorelaxante'),
('PE011', 'Proservação Pré-Cirúrgia (por segmento)'),
('PE012', 'Gegivectomia (por segmento)'),
('PE013', 'Cirúrgia Retalho ( por segmento)'),
('PE014', 'Sepultamento Radicular (por raiz)'),
('PE015', 'Cunha distal'),
('PE016', 'Extensão de Vestíbulo (por Segmento)'),
('PE017', 'Enxerto Pediculado (por segmento)'),
('PE018', 'Enxerto Livre ( por segmento)'),
('PE019', 'Enxerto Conjuntivo Subepitelial'),
('PE020', 'Frenectomia ou  Bridectomia'),
('PE021', 'Odonto-Sessão ( por elemento)'),
('PE022', 'Amputação Radicular Sem Obturação Retrograda- por Raiz'),
('PE023', 'Amputação Radicular Com Obturação Retrograda- por Raiz'),
('PE025', 'Tratamento Periodico de Manutenção para periodontite leve de 6 em 6 meses'),
('PE026', 'Tratamento Periodico de Manutenção para periodontite leve de 4 em 4 meses'),
('PE027', 'Tratamento Periodico de Manutenção para periodontite leve de 2 em 2 meses'),
('PR001', 'Profilaxia: Pol. Coron. (4 hemiarcadas) e Apl. de Jato de Bicarbonato - Tartarec'),
('PR002', 'Aplicação de Jato de Bicabornato'),
('PR003', 'Or. de Higiene Bucal.:cárie d.,doen. period.,câncer b.,manut. de prótese.,uso de dentif. e enxaguat.'),
('PR004', 'Aplicação Tópica de Flúor (excluindo profilaxia )'),
('PR005', 'Controle de Placa Bacteriana ( por sessão )'),
('PR006', 'Tratamento de Gengivite-Terapêutica básica ( duas hemiarcadas)'),
('TE001', 'Teste de Risco de Cárie'),
('TE002', 'Ph'),
('TE003', 'Capacidade Tampão'),
('TE004', 'Fluxo Salivar'),
('TE005', 'Biópsia de Lesões Sugestivas (Acrescentar os Honorários do Laboratório)'),
('TE006', 'Citologia Esfoliativa (acrescentar honorários do laboratório)'),
('RA001', 'Periapical'),
('RA002', 'Interproximal ( Bite-Wing )'),
('RA003', 'Oclusal'),
('RA004', 'RX Postero Anterior ou Antero Posterior'),
('RA005', 'RX da ATM Série Completa ( três incidências )'),
('RA006', 'Panorâmica'),
('RA008', 'Telerradiografia sem Traçados Computadorizado'),
('RA009', 'RX de Mão ( Carpal )'),
('PO023', 'Prótese Fixa Adesiva Direta (por elemento)'),
('PO001', 'Planejamento em Prótese-modelo de est. par. montagem em articul. semi ajustável'),
('PO002', 'Enceramento de Diagnóstico (por elemento)'),
('PO003', 'Ajuste Oclusal(por sessão)'),
('PO004', 'Restauração Metálica Fundida'),
('PO005', 'Restauração Inlay e Onlay de Porcelana'),
('PO006', 'Remoção de Restaurações Metálicas ou Coroas'),
('PO007', 'Recolocação de Restauração Metálica Fundida ou Coras'),
('PO008', 'Núcleo Metálico Fundido'),
('PO009', 'Coroa Provisória em Dente de Estoque'),
('PO010', 'Coroa Provisória Prensada em Acrílico no Laboratório'),
('PO011', 'Reembasamento Provisório'),
('PO012', 'Coroa de Jaqueta Acrílica'),
('PO013', 'Coroa de Porcelana  Pura'),
('PO014', 'Coroa Metalo Cerâmica'),
('PO016', 'Coroa de Venner'),
('PO017', 'Coroa Total Metálica'),
('PO018', 'Coroa 3/4 ou 4/5'),
('PO019', 'Faceta Laminada de Porcelana'),
('PO020', 'Prótese Fixa em Metalo Cerâmica(por elemento)'),
('PO021', 'Prótese Fixa em Metalo Pástica(por elemento)'),
('PO025', 'Prótese Fixa Adesiva Indireta em Metalo Plástica(3 elementos)'),
('PO024', 'Prótese Fixa  Adesiva Indireta em Metalo Cerâmica(3 elementos)'),
('PO026', 'Prótese Parcial Removível Provisória em Acrílico ou sem Grampos'),
('PO027', 'Prótese Parcial Removível com grampos Bilateral'),
('PO028', 'Prótese Parcial Removível para Encaixes'),
('PO029', 'Encaixe Fêmea (por elemento)'),
('PO030', 'Encaixe Macho(por elemento)'),
('PO031', 'Reembasamento de Prótese Total ou Parcial'),
('PO032', 'Prótese Total'),
('PO033', 'Prótese Total Caracterizada'),
('PO034', 'Prótese Total Imediata'),
('PO035', 'Casquete de Moldagem'),
('PO036', 'Ponto de solda'),
('PO037', 'Guia Cirúrgico para Prótese Imediata ou para Cirurgia de Implante'),
('PO038', 'Placa de Mordida Miorrelaxante'),
('PO040', 'Jig ou Front Platô'),
('PO041', 'Conserto em Prótese Total ou Parcial'),
('PO042', 'Reparo ou substituição de dentes em Prótese total ou Parcial'),
('PO043', 'Clareamento Dental consultório-Técnica com Peróxido de carbamida e 35%(Por Elemento)'),
('PO044', 'Claream. Dent. com Moldeira de uso cas. para Dentes Vital. e Desvit.(por arcada)'),
('PO045', 'Restauração Inlay e Onlay(Artglas/Solidex)'),
('PO046', 'Prótese Fixa em Metalo(Artglas/Solidex)(Por Elemento)'),
('PO047', 'Prótese Fixa Adesiva Indireta em Metalo(Artglas/Solidex)(3 elementos)'),
('PO048', 'Restauração Temporária'),
('OR001', 'Aparelho Ortodôntico Fixo Metálico - 1 arcada'),
('OR002', 'Aparelho Ortodôntico Fixo Estético (POLICARBOXILATO) :: 1 arcada'),
('OR003', 'Manutenção de Ap. Ortodôntico :: 20% à 30% Salário Mínimo :: Apresentação em 22% Salário'),
('OR004', 'Placa Lábio Ativa'),
('OR005', 'Aparelho Extra Bucal'),
('OR006', 'Arco Lingual'),
('OR007', 'Botão de Nance'),
('OR008', 'Barra Transpalatina Fixa'),
('OR009', 'Barra Transpalatina Removível'),
('OR010', 'Quadrihélice'),
('OR011', 'Grade Palatina FIxa'),
('OR012', 'Pendulum de Hilgers com mola de TMA'),
('OR013', 'Pendex de Hilgers com mola de TMA'),
('OR014', 'Distalizador de Molar, tipo Jones Jig'),
('OR015', 'Herbst Encapsulado'),
('OR016', 'Mascara Facial-Delaire, tração reversa( sem o diajuntor )'),
('OR017', 'Mentoneira'),
('OR018', 'Disjuntor Palatino tipo Haas, Hirax'),
('OR019', 'Disjuntor Palatino tipo McNammara, Faltin'),
('OR020', 'Frankel'),
('OR021', 'Bimier'),
('OR022', 'Planas'),
('OR023', 'Aparelho Removível com Alça de Binator Invertida'),
('OR024', 'Aparelho Removível com alça de Escheler'),
('OR025', 'Bionator de Baiters'),
('OR027', 'Aparelho de Thurow'),
('OR028', 'Placa de Hawley (Aparelho de Contenção Superior)'),
('OR029', 'Placa de Hawley com torno expansor'),
('OR030', 'Grade Palatina Removível'),
('OR031', 'Planejamento em Ortodontia'),
('OR026', 'Blaca dupla de Sanders'),
('CO001', 'Exodontia (por elemento de permanente)'),
('CO002', 'Exodontia a Retalho'),
('CO003', 'Exodontia (Raiz Residual)'),
('CO004', 'Alveoloplastia(por segmento)'),
('CO006', 'Biópsia de Lesões Sugestivas  (acrescentar valor cobrado em laboratório)'),
('CO005', 'Ulotomia'),
('CO007', 'Sulcoplastia ( por arcada )'),
('CO008', 'Cirurgia para Torus Palatino'),
('CO009', 'Cirurgia para Torus Mandibular-Unilateral'),
('CO010', 'Cirurgia para Torus Mandibular-Bilateral'),
('CO011', 'Apicectomia de Caninos ou Incisivos'),
('CO012', 'Apcectomia Caninos/Incisivos com Obturação Retrograda'),
('CO013', 'Apcectomia Prè-Molares'),
('CO014', 'Apcectomia Pré-Molares com obturação retrograda'),
('CO015', 'Apcectomia de Molares'),
('CO017', 'Frenetomia ou Bridectomia'),
('CO018', 'Remoção de Dentes Inclusos ou Impactados'),
('CO019', 'Cirurgia de Tumores Intra-Óssea'),
('CO020', 'Tratamento de Lesão Cística(enucaleação)'),
('CO021', 'Tratamento de Lesão Cística(marzupialização e enucleação final)'),
('CO022', 'Remoção de Corpo Estranho no Selo Maxilar'),
('CO023', 'Tratamento Cirúrgico de Fístula Buço-Sinucal ou Buco-Nasal com Retalho'),
('CO024', 'Excisão de Glândula Sublingual'),
('CO025', 'Excisão de Glândula Submandibular'),
('CO026', 'Excisão de Glândula Parótida'),
('CO027', 'Excisão de Rânula'),
('CO028', 'Excisão de Tumor de Glândula Salivar'),
('CO029', 'Retirada de Cálculo Salivar'),
('CO030', 'Excisão de Mucocele de Desenvolvimento'),
('CO031', 'Drenagem de Abcesso'),
('CO032', 'Ulectomia'),
('CO033', 'Sinusotomia'),
('CO034', 'Plástico do Canal de Stenon'),
('CO035', 'Palentolabioplastia Bilateral'),
('CO036', 'Tratamento Cirúrgico do Lábio Leporino'),
('CO037', 'Recosntrução Parcial do Lábio Traumatizado'),
('CO038', 'Reconstrução Total de Lábio Traumatizado'),
('CO039', 'Redução Cirúrgica de Luxação de ATM'),
('CO040', 'Tratamento Cirúrgico para Aniquilose de ATM(por lado)'),
('CO041', 'Tratamento Cirúrgico para Osteomelite dos Ossos da Face'),
('CO042', 'Excisão de Sutura de Lesão da Boca com Rotação de Retalho'),
('CO043', 'Suturas Simples de Face'),
('CO044', 'Suturas Múltiplas de Face'),
('CO045', 'Maxilectomia com ou sem Esvaziamento Orbitário'),
('CO047', 'Osteotomia e Osteoplastia de Mandíbula para Micrognatismo'),
('CO046', 'Osteotomia e Osteoplastia de Mandíbula para Prognatismo'),
('CO048', 'Osteotomia e Osteoplastia de Mandíbula para Laterognostismo'),
('CO049', 'Osteotomia e Osteoplastia de Maxila Tipo Le Fort I'),
('CO050', 'Osteotomia e Osteoplastia de Maxila Tipo Le Fort II'),
('CO051', 'Osteotomia e Osteplastia de Maxila Tipo Le Fort III'),
('CO052', 'Reconstrução Total da Mandíbula com Enxerto Ósseo/Prótese'),
('CO053', 'Reconstrução Parcial da Mandíbula com Enxerto Ósseo/Prótese'),
('CO054', 'Reconstrução de Sulco Gengivo-Labial'),
('CO055', 'Excisão em Cunha de Lábio Sutura'),
('CO056', 'Cirurgia de Hipertrofia do Lábio'),
('CO057', 'Cirurgia para Microstomia'),
('CO058', 'Redução de Fratura de Osso Próprios do Nariz'),
('CO059', 'Redução Incluenta de Fratura Unilateral de Mandibula'),
('CO060', 'Redução Cruenta de Fratura Unilateral Mandíbula'),
('CO061', 'Redução Incluenta de Fratura Bilateral de Mandíbula'),
('CO062', 'Redução Cruenta de Fratura Bilateral de Mandíbula'),
('CO063', 'Redução Cruenta de Fratura Cominutiva de Mandibula'),
('CO064', 'Redução de Fratura de Côndido Mandíbula'),
('CO065', 'Fraturas Alvéolo-Dentárias-Redução Cruenta'),
('CO066', 'Fraturas Alvéolo-Dentárias-Redução Incruenta'),
('CO067', 'Reimplante de Dente (por elemento)'),
('CO068', 'Redução Inoruenta de Fratura de Le Fort I'),
('CO069', 'Redução Incruenta de Fratura Le Fort II'),
('CO070', 'Redução Incruenta de Fratura Le Fort III'),
('CO071', 'Redução Cruenta de Fratura Le Fort I'),
('CO072', 'Redução Cruenta de Fratura Le Fort II'),
('CO074', 'Fraturas Complexas do Segmento Fixo da Face'),
('CO073', 'Redução Cruenta de Fratura Le Fort III'),
('CO075', 'Fraturas Complexas do Segmento da Face com Fixação Pericraniana'),
('CO077', 'Fratura do Arco Zigomático - Redução cirúrgica sem fixação'),
('CO078', 'Fratura do Osso Zigomático - Redução Cirúrgica e Fixação'),
('CO079', 'Retirada de Fios Intra ou Trans-Ósseos'),
('CO080', 'Retirada de Bloqueio Maxilo-Mandibular'),
('CO081', 'Retirada de Ancoragem e Cerclagens'),
('CO082', 'Cirurgia de Cisto'),
('CO083', 'Artroplastia para Luxação Rescidivante da ATM'),
('CO084', 'Ressecção Parcial da Mandíbula'),
('CO085', 'Ressecção Parcial de Mandíbula com enxerto ósseo'),
('CO086', 'Hemimandibuloctomia'),
('CO087', 'Hemimandibulectomia com colação de prótese'),
('CO088', 'Hemimandibulectomia com enxerto ósseo'),
('CO089', 'Mnadibulectomias com Reconstrução Microcirúrgica'),
('CO090', 'Mandibulectomia com Reconstrução de osteomicutanêa'),
('CO091', 'Osteoplastia de Etmóido Orbitárias'),
('CO092', 'Osteoplastia de Mandíbula'),
('CO093', 'Osteoplastia de Órbita'),
('CO094', 'Ressecção do Meso Infra Estrutura do Maxila Superior'),
('CO095', 'Ressecção Total de Maxila Inclinada Exenter de Órbita'),
('CO096', 'Ressecção Maxilar Superior Reconstrução à custa Retalhos'),
('IM001', 'Ato Cirúrgico de Inserção do Pino de Titânio'),
('IM002', 'Planejamento Cirúrgico e Protético com modelos de estudo'),
('IM003', 'Coroa Total sobre Implante em Metalo Artglas/Solidex'),
('IM004', 'Coroa Total sobre Implante em Metalo Cerâmica (Porcelana)'),
('IM005', 'Barra para Prótese Total Fixa ou Removível Sobre Implante (Over Dental0'),
('IM006', 'Interm. e Adapt. para prótese sobre implante:Oring. Munhões,Uclas etc(unitários)'),
('IM007', 'Coroa Total Provisória sobre Implante em Acrílico'),
('OR032', 'Manutenção de Ap. Ortodôntico :: 20% à 30% Salário Mínimo :: Apresentação em 30% Salário'),
('DE023', 'Clareamento Dental em Consultório a Layser :: Por Arcada'),
('EX005', 'Urgência Horário Normal (independente da sequência do tratamento)'),
('OR033', 'Aparelho Ortodôntico Fixo Estético (CERÂMICA) :: 1 Arcada'),
('CO097', 'Aumento de Coroa Clínica'),
('CO098', 'Enxerto Ósseo Autôgeno em Bloco para Ganho de Volume - Por Segmento'),
('CO099', 'Enxertos Utilizando Bio-Materiais (Acrescentar o Valor do Bio-Material)'),
('CO100', 'Exodontia de CISO ''Incluso ou Impactado'''),
('EN025', 'Tratamento Endodôntico de Molar acima de 3 condutos (não inclue radiografias)'),
('EN026', 'Retratamento Endodôntico de Molar acima de 3 condutos (não inlcue radiografias)'),
('IM008', 'Elemento de Porcelana para Ponte Sobre Implante'),
('CO101', 'Apicectomia de Molares - Com obturação retrograda'),
('CO102', 'Osteoplastia Zigomático - Maxilar'),
('PE009', 'Remoção  de Fatores de Retenção'),
('PE028', 'Manutenção do Tratamento Cirúrgico'),
('PE029', 'Aumento de Coroa Clínica (por elemento)'),
('PE030', 'Tratamento Regenerativo com uso de Barreia'),
('IM009', 'Guia Cirúrgico para Cirurgia de Implante Unitário ou Múltiplos');


# ############################

#
# Estrutura da tabela `honorarios_convenios`
#

CREATE TABLE IF NOT EXISTS `honorarios_convenios` (
  `codigo_convenio` int(11) NOT NULL,
  `codigo_procedimento` varchar(10) NOT NULL,
  `valor` float NOT NULL,
  PRIMARY KEY (`codigo_convenio`,`codigo_procedimento`)
) ENGINE=InnoDB;

INSERT INTO `honorarios_convenios` (`codigo_convenio`, `codigo_procedimento`, `valor`) VALUES
(1, 'EX001', 61),
(1, 'EX002', 116),
(1, 'EX003', 45),
(1, 'EX004', 49),
(1, 'DE001', 52),
(1, 'DE002', 66),
(1, 'DE003', 77),
(1, 'DE005', 100),
(1, 'DE004', 77.5),
(1, 'DE006', 63),
(1, 'DE007', 66),
(1, 'DE009', 100),
(1, 'DE010', 110),
(1, 'DE011', 63),
(1, 'DE012', 80),
(1, 'DE014', 80),
(1, 'DE016', 171),
(1, 'DE017', 40),
(1, 'DE018', 426),
(1, 'DE019', 268),
(1, 'DE020', 219),
(1, 'DE021', 46),
(1, 'EN002', 220),
(1, 'EN003', 350),
(1, 'EN004', 203),
(1, 'EN005', 270),
(1, 'EN001', 188),
(1, 'DE022', 189),
(1, 'OD001', 35.26),
(1, 'OD002', 35),
(1, 'OD003', 42),
(1, 'OD004', 32),
(1, 'DE015', 64),
(1, 'DE008', 94),
(1, 'DE013', 450),
(1, 'EN006', 470),
(1, 'EN008', 114),
(1, 'EN009', 68),
(1, 'EN010', 79),
(1, 'EN011', 189),
(1, 'EN012', 52),
(1, 'EN014', 83),
(1, 'EN015', 177),
(1, 'EN016', 202),
(1, 'EN013', 78),
(1, 'EN007', 130),
(1, 'EN017', 209),
(1, 'EN018', 236),
(1, 'EN019', 242),
(1, 'EN020', 269),
(1, 'EN021', 89),
(1, 'EN022', 102),
(1, 'EN023', 34),
(1, 'EN024', 46),
(1, 'OD005', 35),
(1, 'OD006', 66),
(1, 'OD007', 65),
(1, 'OD008', 59),
(1, 'OD009', 60),
(1, 'OD011', 78),
(1, 'OD012', 142),
(1, 'OD013', 44),
(1, 'OD014', 208),
(1, 'OD015', 174),
(1, 'OD017', 47),
(1, 'OD018', 72),
(1, 'OD019', 78),
(1, 'OD020', 46),
(1, 'OD010', 125),
(1, 'OD016', 176),
(1, 'PE001', 67),
(1, 'PE002', 78),
(1, 'PE003', 90),
(1, 'PE004', 80),
(1, 'PE005', 32),
(1, 'PE006', 40),
(1, 'PE007', 111),
(1, 'PE008', 64),
(1, 'PE010', 177),
(1, 'PE011', 61),
(1, 'PE012', 140),
(1, 'PE013', 150),
(1, 'PE014', 148),
(1, 'PE015', 139),
(1, 'PE016', 154),
(1, 'PE017', 147),
(1, 'PE018', 175),
(1, 'PE019', 175),
(1, 'PE020', 126),
(1, 'PE021', 143),
(1, 'PE022', 179),
(1, 'PE023', 205),
(1, 'PE025', 159),
(1, 'PE026', 159),
(1, 'PE027', 159),
(1, 'PR001', 56),
(1, 'PR002', 80),
(1, 'PR003', 40),
(1, 'PR004', 40),
(1, 'PR005', 32),
(1, 'PR006', 74),
(1, 'TE001', 40),
(1, 'TE002', 40),
(1, 'TE003', 40),
(1, 'TE004', 40),
(1, 'TE005', 230),
(1, 'TE006', 200),
(1, 'RA001', 7),
(1, 'RA002', 7),
(1, 'RA003', 13),
(1, 'RA004', 23),
(1, 'RA005', 50),
(1, 'RA006', 23),
(1, 'RA008', 23),
(1, 'RA009', 23),
(1, 'PO023', 189),
(1, 'PO001', 85),
(1, 'PO002', 92),
(1, 'PO003', 64),
(1, 'PO004', 219),
(1, 'PO005', 440),
(1, 'PO006', 39),
(1, 'PO007', 50),
(1, 'PO008', 154),
(1, 'PO009', 86),
(1, 'PO010', 176),
(1, 'PO011', 34),
(1, 'PO012', 215),
(1, 'PO013', 508),
(1, 'PO014', 448),
(1, 'PO016', 363),
(1, 'PO017', 256),
(1, 'PO018', 252),
(1, 'PO019', 441),
(1, 'PO020', 602),
(1, 'PO021', 459),
(1, 'PO025', 578),
(1, 'PO024', 808),
(1, 'PO026', 427),
(1, 'PO027', 751),
(1, 'PO028', 1013),
(1, 'PO029', 432),
(1, 'PO030', 432),
(1, 'PO031', 221),
(1, 'PO032', 962),
(1, 'PO033', 1205),
(1, 'PO034', 618),
(1, 'PO035', 71),
(1, 'PO036', 151),
(1, 'PO037', 215),
(1, 'PO038', 170),
(1, 'PO040', 84),
(1, 'PO041', 127),
(1, 'PO042', 61),
(1, 'PO043', 189),
(1, 'PO044', 268),
(1, 'PO045', 426),
(1, 'PO046', 430),
(1, 'PO047', 580),
(1, 'PO048', 46),
(1, 'OR001', 368),
(1, 'OR002', 580),
(1, 'OR003', 120),
(1, 'OR004', 190),
(1, 'OR005', 247),
(1, 'OR006', 217),
(1, 'OR007', 225),
(1, 'OR008', 223),
(1, 'OR009', 136),
(1, 'OR010', 225),
(1, 'OR011', 225),
(1, 'OR012', 254),
(1, 'OR013', 280),
(1, 'OR014', 251),
(1, 'OR015', 378),
(1, 'OR016', 209),
(1, 'OR017', 114),
(1, 'OR018', 258),
(1, 'OR019', 221),
(1, 'OR020', 291),
(1, 'OR021', 291),
(1, 'OR022', 291),
(1, 'OR023', 286),
(1, 'OR024', 237),
(1, 'OR025', 274),
(1, 'OR027', 264),
(1, 'OR028', 160),
(1, 'OR029', 180),
(1, 'OR030', 149),
(1, 'OR031', 222),
(1, 'OR026', 286),
(1, 'CO001', 77),
(1, 'CO002', 100),
(1, 'CO003', 78),
(1, 'CO004', 106),
(1, 'CO006', 230),
(1, 'CO005', 71),
(1, 'CO007', 117),
(1, 'CO008', 138),
(1, 'CO009', 111),
(1, 'CO010', 168),
(1, 'CO011', 177),
(1, 'CO012', 202),
(1, 'CO013', 209),
(1, 'CO014', 236),
(1, 'CO015', 242),
(1, 'CO017', 126),
(1, 'CO018', 188),
(1, 'CO019', 188),
(1, 'CO020', 210),
(1, 'CO021', 243),
(1, 'CO022', 232),
(1, 'CO023', 188),
(1, 'CO024', 424),
(1, 'CO025', 688),
(1, 'CO026', 562.19),
(1, 'CO027', 457),
(1, 'CO028', 424),
(1, 'CO029', 172),
(1, 'CO030', 117),
(1, 'CO031', 63),
(1, 'CO032', 78),
(1, 'CO033', 193),
(1, 'CO034', 359),
(1, 'CO035', 433),
(1, 'CO036', 337),
(1, 'CO037', 337),
(1, 'CO038', 484),
(1, 'CO039', 330),
(1, 'CO040', 550),
(1, 'CO041', 411),
(1, 'CO042', 448),
(1, 'CO043', 73),
(1, 'CO044', 91.2),
(1, 'CO045', 440),
(1, 'CO047', 765),
(1, 'CO046', 765),
(1, 'CO048', 765),
(1, 'CO049', 550),
(1, 'CO050', 789),
(1, 'CO051', 936),
(1, 'CO052', 1138),
(1, 'CO053', 716),
(1, 'CO054', 152),
(1, 'CO055', 156),
(1, 'CO056', 264),
(1, 'CO057', 440),
(1, 'CO058', 440),
(1, 'CO059', 205),
(1, 'CO060', 477),
(1, 'CO061', 249),
(1, 'CO062', 789),
(1, 'CO063', 703),
(1, 'CO064', 455),
(1, 'CO065', 132),
(1, 'CO066', 73),
(1, 'CO067', 117),
(1, 'CO068', 356),
(1, 'CO069', 356),
(1, 'CO070', 411),
(1, 'CO071', 550),
(1, 'CO072', 765),
(1, 'CO074', 411),
(1, 'CO073', 765),
(1, 'CO075', 1138),
(1, 'CO077', 337),
(1, 'CO078', 440),
(1, 'CO079', 44),
(1, 'CO080', 41),
(1, 'CO081', 41),
(1, 'CO082', 108),
(1, 'CO083', 752),
(1, 'CO084', 514),
(1, 'CO085', 624),
(1, 'CO086', 587),
(1, 'CO087', 716),
(1, 'CO088', 789),
(1, 'CO089', 1138),
(1, 'CO090', 936),
(1, 'CO091', 862),
(1, 'CO092', 789),
(1, 'CO093', 936),
(1, 'CO094', 466),
(1, 'CO095', 826),
(1, 'CO096', 991),
(1, 'IM001', 850),
(1, 'IM002', 120),
(1, 'IM003', 530),
(1, 'IM004', 720),
(1, 'IM005', 430),
(1, 'IM006', 240),
(1, 'IM007', 320),
(1, 'OR032', 140),
(1, 'DE023', 490),
(1, 'EX005', 70),
(1, 'OR033', 850),
(1, 'CO097', 132),
(1, 'CO098', 700),
(1, 'CO099', 420),
(1, 'CO100', 188),
(1, 'EN025', 400),
(1, 'EN026', 450),
(1, 'IM008', 600),
(1, 'CO101', 269),
(1, 'CO102', 441),
(1, 'PE009', 62),
(1, 'PE028', 65),
(1, 'PE029', 132),
(1, 'PE030', 445),
(1, 'IM009', 215),
(2, 'EX001', 0),
(2, 'EX002', 45),
(2, 'EX003', 0),
(2, 'EX004', 30),
(2, 'DE001', 35),
(2, 'DE002', 40),
(2, 'DE003', 45),
(2, 'DE005', 60),
(2, 'DE004', 50),
(2, 'DE006', 40),
(2, 'DE007', 50),
(2, 'DE009', 65),
(2, 'DE010', 85),
(2, 'DE011', 35),
(2, 'DE012', 40),
(2, 'DE014', 45),
(2, 'DE016', 70),
(2, 'DE017', 35),
(2, 'DE018', 250),
(2, 'DE019', 150),
(2, 'DE020', 140),
(2, 'DE021', 35),
(2, 'EN002', 180),
(2, 'EN003', 260),
(2, 'EN004', 160),
(2, 'EN005', 210),
(2, 'EN001', 140),
(2, 'DE022', 110),
(2, 'OD001', 30),
(2, 'OD002', 30),
(2, 'OD003', 35),
(2, 'OD004', 20),
(2, 'DE015', 45),
(2, 'DE008', 55),
(2, 'DE013', 360),
(2, 'EN006', 320),
(2, 'EN008', 70),
(2, 'EN009', 35),
(2, 'EN010', 40),
(2, 'EN011', 110),
(2, 'EN012', 35),
(2, 'EN014', 35),
(2, 'EN015', 140),
(2, 'EN016', 180),
(2, 'EN013', 40),
(2, 'EN007', 70),
(2, 'EN017', 155),
(2, 'EN018', 170),
(2, 'EN019', 190),
(2, 'EN020', 220),
(2, 'EN021', 40),
(2, 'EN022', 40),
(2, 'EN023', 20),
(2, 'EN024', 30),
(2, 'OD005', 30),
(2, 'OD006', 35),
(2, 'OD007', 30),
(2, 'OD008', 35),
(2, 'OD009', 35),
(2, 'OD011', 40),
(2, 'OD012', 90),
(2, 'OD013', 30),
(2, 'OD014', 80),
(2, 'OD015', 70),
(2, 'OD017', 30),
(2, 'OD018', 35),
(2, 'OD019', 40),
(2, 'OD020', 35),
(2, 'OD010', 60),
(2, 'OD016', 80),
(2, 'PE001', 40),
(2, 'PE002', 45),
(2, 'PE003', 50),
(2, 'PE004', 40),
(2, 'PE005', 20),
(2, 'PE006', 25),
(2, 'PE007', 60),
(2, 'PE008', 45),
(2, 'PE010', 120),
(2, 'PE011', 30),
(2, 'PE012', 70),
(2, 'PE013', 100),
(2, 'PE014', 100),
(2, 'PE015', 80),
(2, 'PE016', 80),
(2, 'PE017', 90),
(2, 'PE018', 100),
(2, 'PE019', 100),
(2, 'PE020', 90),
(2, 'PE021', 80),
(2, 'PE022', 110),
(2, 'PE023', 140),
(2, 'PE025', 80),
(2, 'PE026', 80),
(2, 'PE027', 80),
(2, 'PR001', 40),
(2, 'PR002', 40),
(2, 'PR003', 30),
(2, 'PR004', 30),
(2, 'PR005', 15),
(2, 'PR006', 40),
(2, 'TE001', 30),
(2, 'TE002', 30),
(2, 'TE003', 30),
(2, 'TE004', 30),
(2, 'TE005', 110),
(2, 'TE006', 90),
(2, 'RA001', 5),
(2, 'RA002', 5),
(2, 'RA003', 10),
(2, 'RA004', 20),
(2, 'RA005', 40),
(2, 'RA006', 20),
(2, 'RA008', 20),
(2, 'RA009', 20),
(2, 'PO023', 100),
(2, 'PO001', 40),
(2, 'PO002', 50),
(2, 'PO003', 45),
(2, 'PO004', 140),
(2, 'PO005', 400),
(2, 'PO006', 20),
(2, 'PO007', 35),
(2, 'PO008', 70),
(2, 'PO009', 45),
(2, 'PO010', 90),
(2, 'PO011', 20),
(2, 'PO012', 100),
(2, 'PO013', 410),
(2, 'PO014', 350),
(2, 'PO016', 170),
(2, 'PO017', 150),
(2, 'PO018', 150),
(2, 'PO019', 400),
(2, 'PO020', 350),
(2, 'PO021', 200),
(2, 'PO025', 310),
(2, 'PO024', 630),
(2, 'PO026', 180),
(2, 'PO027', 360),
(2, 'PO028', 650),
(2, 'PO029', 290),
(2, 'PO030', 290),
(2, 'PO031', 110),
(2, 'PO032', 290),
(2, 'PO033', 350),
(2, 'PO034', 230),
(2, 'PO035', 40),
(2, 'PO036', 90),
(2, 'PO037', 120),
(2, 'PO038', 140),
(2, 'PO040', 50),
(2, 'PO041', 45),
(2, 'PO042', 40),
(2, 'PO043', 110),
(2, 'PO044', 150),
(2, 'PO045', 250),
(2, 'PO046', 250),
(2, 'PO047', 450),
(2, 'PO048', 35),
(2, 'OR001', 0),
(2, 'OR002', 300),
(2, 'OR003', 77),
(2, 'OR004', 120),
(2, 'OR005', 130),
(2, 'OR006', 120),
(2, 'OR007', 120),
(2, 'OR008', 120),
(2, 'OR009', 80),
(2, 'OR010', 120),
(2, 'OR011', 120),
(2, 'OR012', 120),
(2, 'OR013', 120),
(2, 'OR014', 120),
(2, 'OR015', 180),
(2, 'OR016', 120),
(2, 'OR017', 70),
(2, 'OR018', 120),
(2, 'OR019', 120),
(2, 'OR020', 120),
(2, 'OR021', 120),
(2, 'OR022', 120),
(2, 'OR023', 120),
(2, 'OR024', 120),
(2, 'OR025', 120),
(2, 'OR027', 120),
(2, 'OR028', 120),
(2, 'OR029', 130),
(2, 'OR030', 80),
(2, 'OR031', 100),
(2, 'OR026', 120),
(2, 'CO001', 30),
(2, 'CO002', 45),
(2, 'CO003', 35),
(2, 'CO004', 65),
(2, 'CO006', 110),
(2, 'CO005', 30),
(2, 'CO007', 60),
(2, 'CO008', 80),
(2, 'CO009', 100),
(2, 'CO010', 130),
(2, 'CO011', 140),
(2, 'CO012', 180),
(2, 'CO013', 155),
(2, 'CO014', 170),
(2, 'CO015', 190),
(2, 'CO017', 90),
(2, 'CO018', 100),
(2, 'CO019', 120),
(2, 'CO020', 150),
(2, 'CO021', 190),
(2, 'CO022', 190),
(2, 'CO023', 140),
(2, 'CO024', 350),
(2, 'CO025', 510),
(2, 'CO026', 400),
(2, 'CO027', 360),
(2, 'CO028', 310),
(2, 'CO029', 110),
(2, 'CO030', 90),
(2, 'CO031', 35),
(2, 'CO032', 35),
(2, 'CO033', 180),
(2, 'CO034', 240),
(2, 'CO035', 310),
(2, 'CO036', 250),
(2, 'CO037', 250),
(2, 'CO038', 400),
(2, 'CO039', 250),
(2, 'CO040', 410),
(2, 'CO041', 350),
(2, 'CO042', 300),
(2, 'CO043', 45),
(2, 'CO044', 60),
(2, 'CO045', 320),
(2, 'CO047', 600),
(2, 'CO046', 600),
(2, 'CO048', 600),
(2, 'CO049', 400),
(2, 'CO050', 610),
(2, 'CO051', 710),
(2, 'CO052', 930),
(2, 'CO053', 545),
(2, 'CO054', 110),
(2, 'CO055', 115),
(2, 'CO056', 195),
(2, 'CO057', 360),
(2, 'CO058', 350),
(2, 'CO059', 130),
(2, 'CO060', 340),
(2, 'CO061', 190),
(2, 'CO062', 410),
(2, 'CO063', 520),
(2, 'CO064', 320),
(2, 'CO065', 110),
(2, 'CO066', 45),
(2, 'CO067', 60),
(2, 'CO068', 300),
(2, 'CO069', 300),
(2, 'CO070', 310),
(2, 'CO071', 450),
(2, 'CO072', 500),
(2, 'CO074', 300),
(2, 'CO073', 510),
(2, 'CO075', 800),
(2, 'CO077', 250),
(2, 'CO078', 320),
(2, 'CO079', 35),
(2, 'CO080', 35),
(2, 'CO081', 35),
(2, 'CO082', 100),
(2, 'CO083', 550),
(2, 'CO084', 400),
(2, 'CO085', 490),
(2, 'CO086', 430),
(2, 'CO087', 510),
(2, 'CO088', 590),
(2, 'CO089', 900),
(2, 'CO090', 705),
(2, 'CO091', 650),
(2, 'CO092', 600),
(2, 'CO093', 710),
(2, 'CO094', 300),
(2, 'CO095', 600),
(2, 'CO096', 735),
(2, 'IM001', 600),
(2, 'IM002', 60),
(2, 'IM003', 420),
(2, 'IM004', 530),
(2, 'IM005', 350),
(2, 'IM006', 130),
(2, 'IM007', 250),
(2, 'OR032', 105),
(2, 'DE023', 300),
(2, 'EX005', 35),
(2, 'OR033', 600),
(2, 'CO097', 80),
(2, 'CO098', 500),
(2, 'CO099', 210),
(2, 'CO100', 100),
(2, 'EN025', 290),
(2, 'EN026', 350),
(2, 'IM008', 430),
(2, 'CO101', 220),
(2, 'CO102', 310),
(2, 'PE009', 30),
(2, 'PE028', 35),
(2, 'PE029', 80),
(2, 'PE030', 300),
(2, 'IM009', 120);

# ############################

#
# Estrutura da tabela `implantodontia`
#

CREATE TABLE IF NOT EXISTS `implantodontia` (
  `codigo_paciente` int(10) NOT NULL,
  `tratamento` enum('Sim','Não') default NULL,
  `regioes` varchar(200) default NULL,
  `expectativa` varchar(200) default NULL,
  `areas` varchar(200) default NULL,
  `marca` varchar(200) default NULL,
  `enxerto` enum('Sim','Não') default NULL,
  `tipoenxerto` varchar(200) default NULL,
  `observacoes` text default NULL,
  PRIMARY KEY  (`codigo_paciente`)
) ENGINE=InnoDB;

# ############################

#
# Estrutura da tabela `inquerito`
#

CREATE TABLE IF NOT EXISTS `inquerito` (
  `codigo_paciente` int(10) NOT NULL,
  `tratamento` enum('Sim','Não') default NULL,
  `motivotrat` varchar(150) default NULL,
  `hospitalizado` enum('Sim','Não') default NULL,
  `motivohosp` varchar(150) default NULL,
  `cardiovasculares` enum('Sim','Não') default NULL,
  `sanguineo` enum('Sim','Não') default NULL,
  `reumatico` enum('Sim','Não') default NULL,
  `respiratorio` enum('Sim','Não') default NULL,
  `qualresp` varchar(150) default NULL,
  `gastro` enum('Sim','Não') default NULL,
  `qualgastro` varchar(150) default NULL,
  `renal` enum('Sim','Não') default NULL,
  `diabetico` enum('Sim','Não') default NULL,
  `contagiosa` enum('Sim','Não') default NULL,
  `qualcont` varchar(150) default NULL,
  `anestesia` enum('Sim','Não') default NULL,
  `complicacoesanest` varchar(150) default NULL,
  `alergico` enum('Sim','Não') default NULL,
  `qualalergico` varchar(150) default NULL,
  `observacoes` text,
  PRIMARY KEY  (`codigo_paciente`)
) ENGINE=InnoDB;

# ############################

#
# Estrutura da tabela `laboratorios`
#

CREATE TABLE IF NOT EXISTS `laboratorios` (
  `codigo` int(15) NOT NULL auto_increment,
  `nomefantasia` varchar(80) default NULL,
  `cpf` varchar(50) NOT NULL default '',
  `razaosocial` varchar(80) default NULL,
  `atuacao` varchar(80) default NULL,
  `endereco` varchar(150) default NULL,
  `bairro` varchar(40) default NULL,
  `cidade` varchar(40) default NULL,
  `estado` varchar(50) default NULL,
  `pais` varchar(50) default NULL,
  `cep` varchar(9) default NULL,
  `celular` varchar(15) default NULL,
  `telefone1` varchar(15) default NULL,
  `telefone2` varchar(15) default NULL,
  `inscricaoestadual` varchar(40) default NULL,
  `website` varchar(100) default NULL,
  `email` varchar(100) default NULL,
  `nomerepresentante` varchar(80) default NULL,
  `apelidorepresentante` varchar(50) default NULL,
  `emailrepresentante` varchar(100) default NULL,
  `celularrepresentante` varchar(15) default NULL,
  `telefone1representante` varchar(15) default NULL,
  `telefone2representante` varchar(15) default NULL,
  `banco` varchar(50) default NULL,
  `agencia` varchar(15) default NULL,
  `conta` varchar(15) default NULL,
  `favorecido` varchar(50) default NULL,
  PRIMARY KEY  (`codigo`)
) ENGINE=InnoDB;

# ############################

#
# Estrutura da tabela `laboratorios_procedimentos`
#

CREATE TABLE IF NOT EXISTS laboratorios_procedimentos (
  codigo int NOT NULL auto_increment,
  codigo_laboratorio int NOT NULL,
  codigo_paciente int NOT NULL,
  codigo_dentista int NOT NULL,
  procedimento TEXT NOT NULL,
  datahora DATETIME NOT NULL,
  PRIMARY KEY (codigo)
) ENGINE=InnoDB;

# ############################

#
# Estrutura da tabela `laboratorios_procedimentos_status`
#

CREATE TABLE IF NOT EXISTS laboratorios_procedimentos_status (
  codigo int NOT NULL auto_increment,
  codigo_procedimento int NOT NULL,
  `status` TEXT NOT NULL,
  datahora DATETIME NOT NULL,
  PRIMARY KEY (codigo)
) ENGINE=InnoDB;

# ############################

#
# Estrutura da tabela `laudos`
#

CREATE TABLE `laudos` (
  `laudo` TEXT NULL DEFAULT NULL ,
  `codigo_paciente` INT NOT NULL ,
  PRIMARY KEY ( `codigo_paciente` )
) ENGINE = InnoDB;

# ############################

#
# Estrutura da tabela `odontograma`
#

CREATE TABLE `odontograma` (
  `codigo_paciente` INT NOT NULL ,
  `dente` INT(2) NOT NULL ,
  `descricao` VARCHAR(100) NULL DEFAULT NULL ,
  PRIMARY KEY ( `codigo_paciente` , `dente` )
) ENGINE = InnoDB;

# ############################

#
# Estrutura da tabela `orcamento`
#

CREATE TABLE IF NOT EXISTS `orcamento` (
  `codigo` int(10) NOT NULL auto_increment,
  `codigo_paciente` int(10) NOT NULL,
  `data` date default NULL,
  `formapagamento` tinyint default NULL,
  `aserpago` tinyint(1) default NULL,
  `valortotal` float default NULL,
  `parcelas` tinyint(2) default NULL,
  `desconto` float default NULL,
  `codigo_dentista` varchar(11) default NULL,
  `confirmado` tinyint(1) NOT NULL default '0',
  `entrada` float default '0',
  `entrada_tipo` tinyint(1) NOT NULL default '1',
  `baixa` tinyint(1) NOT NULL default '0',
  PRIMARY KEY  (`codigo`)
) ENGINE=InnoDB;

# ############################

#
# Estrutura da tabela `ortodontia`
#

CREATE TABLE IF NOT EXISTS `ortodontia` (
  `codigo_paciente` int(10) NOT NULL,
  `tratamento` enum('Sim','Não') default NULL,
  `previsao` varchar(200) default NULL,
  `razoes` varchar(200) default NULL,
  `motivacao` varchar(200) default NULL,
  `perfil` varchar(200) default NULL,
  `simetria` varchar(200) default NULL,
  `tipologia` varchar(200) default NULL,
  `classe` varchar(200) default NULL,
  `mordida` varchar(200) default NULL,
  `spee` varchar(200) default NULL,
  `overbite` varchar(200) default NULL,
  `overjet` varchar(200) default NULL,
  `media` varchar(200) default NULL,
  `atm` varchar(200) default NULL,
  `radio` text default NULL,
  `modelo` text default NULL,
  `observacoes` text default NULL,
  PRIMARY KEY  (`codigo_paciente`)
) ENGINE=InnoDB;

# ############################

#
# Estrutura da tabela `pacientes`
#

CREATE TABLE IF NOT EXISTS `pacientes` (
  `codigo` int(10) NOT NULL,
  `nome` varchar(80) DEFAULT NULL,
  `cpf` varchar(50) DEFAULT NULL,
  `rg` varchar(50) DEFUALT NULL,
  `estadocivil` enum('solteiro','casado','divorciado','viuvo') DEFAULT NULL,
  `sexo` enum('Masculino','Feminino') DEFAULT NULL,
  `etnia` enum('africano','asiatico','caucasiano','latino','orientemedio','multietnico') DEFAULT NULL,
  `profissao` varchar(80) DEFAULT NULL,
  `naturalidade` varchar(80) DEFAULT NULL,
  `nacionalidade` varchar(80) DEFAULT NULL,
  `nascimento` date DEFAULT NULL,
  `endereco` varchar(150) DEFAULT NULL,
  `bairro` varchar(40) DEFAULT NULL,
  `cidade` varchar(40) DEFAULT NULL,
  `estado` varchar(50) DEFAULT NULL,
  `pais` varchar(50) DEFAULT NULL,
  `falecido` enum('Sim','Não') NOT NULL DEFAULT 'Não',
  `cep` varchar(9) DEFAULT NULL,
  `celular` varchar(15) DEFAULT NULL,
  `telefone1` varchar(15) DEFAULT NULL,
  `telefone2` varchar(15) DEFAULT NULL,
  `hobby` varchar(250) DEFAULT NULL,
  `indicadopor` varchar(80) DEFAULT NULL,
  `email` varchar(100) DEFAULT NULL,
  `obs_etiqueta` varchar(90) DEFAULT NULL,
  `tratamento` set('Ortodontia','Implantodontia','Dentística','Prótese','Odontopediatria','Cirurgia','Endodontia','Periodontia','Radiologia','DTM','Odontogeriatria','Ortopedia') DEFAULT NULL,
  `codigo_dentistaprocurado` int(11) DEFAULT NULL,
  `codigo_dentistaatendido` int(11) DEFAULT NULL,
  `codigo_dentistaencaminhado` int(11) DEFAULT NULL,
  `nomemae` varchar(80) DEFAULT NULL,
  `nascimentomae` date DEFAULT NULL,
  `profissaomae` varchar(150) DEFAULT NULL,
  `nomepai` varchar(80) DEFAULT NULL,
  `nascimentopai` date DEFAULT NULL,
  `profissaopai` varchar(150) DEFAULT NULL,
  `telefone1pais` varchar(15) DEFAULT NULL,
  `telefone2pais` varchar(15) DEFAULT NULL,
  `enderecofamiliar` varchar(150) DEFAULT NULL,
  `datacadastro` date DEFAULT NULL,
  `dataatualizacao` date DEFAULT NULL,
  `status` tinyint(1) DEFAULT NULL,
  `objetivo` text,
  `observacoes` text,
  `codigo_convenio` int(11) NOT NULL DEFAULT 1,
  `outros` varchar(100) DEFAULT NULL,
  `matricula` varchar(20) DEFAULT NULL,
  `titular` varchar(80) DEFAULT NULL,
  `validadeconvenio` varchar(25) DEFAULT NULL,
  `foto` blob,
  PRIMARY KEY (`codigo`)
) ENGINE=InnoDB;

# ############################

#
# Estrutura da tabela `parcelas_orcamento`
#

CREATE TABLE IF NOT EXISTS `parcelas_orcamento` (
  `codigo` int(100) NOT NULL auto_increment,
  `codigo_orcamento` int(10) NOT NULL,
  `datavencimento` date default NULL,
  `valor` float default NULL,
  `pago` tinyint(1) NOT NULL default '0',
  `datapgto` date default NULL,
  PRIMARY KEY  (`codigo`)
) ENGINE=InnoDB;

# ############################

#
# Estrutura da tabela `patrimonio`
#

CREATE TABLE IF NOT EXISTS `patrimonio` (
  `codigo` int(10) NOT NULL auto_increment,
  `setor` varchar(40) default NULL,
  `descricao` varchar(150) default NULL,
  `valor` float default NULL,
  `dataaquisicao` date default NULL,
  `tempogarantia` varchar(30) default NULL,
  `cor` varchar(30) default NULL,
  `quantidade` varchar(20) default NULL,
  `fornecedor` varchar(50) default NULL,
  `numeronotafiscal` varchar(30) default NULL,
  `dimensoes` varchar(30) default NULL,
  `observacoes` text,
  PRIMARY KEY  (`codigo`)
) ENGINE=InnoDB;

# ############################

#
# Estrutura da tabela `permissoes`
#

CREATE TABLE IF NOT EXISTS `permissoes` (
  `nivel` varchar(30) NOT NULL,
  `area` enum('profissionais','pacientes','funcionarios','fornecedores','agenda','patrimonio','estoque','laboratorios','convenios','honorarios','contas_pagar','contas_receber','caixa','cheques','pagamentos','arquivos_clinica','manuais','contatos','backup_gerar','backup_restaurar','informacoes','idiomas') NOT NULL DEFAULT 'profissionais',
  `permissao` set('L','V','E','I','A') NOT NULL,
  PRIMARY KEY (`nivel`,`area`)
) ENGINE=InnoDB;

INSERT INTO permissoes VALUES
  ('Dentista', 'profissionais', 'L,V'),
  ('Dentista', 'pacientes', 'L,V,E,I,A'),
  ('Dentista', 'funcionarios', 'L,V'),
  ('Dentista', 'fornecedores', 'L,V,I,A'),
  ('Dentista', 'agenda', 'L,E'),
  ('Dentista', 'patrimonio', ''),
  ('Dentista', 'estoque', 'L,V,E,I,A'),
  ('Dentista', 'laboratorios', 'L,V,E,I'),
  ('Dentista', 'convenios', 'L,V'),
  ('Dentista', 'honorarios', 'L,V'),
  ('Dentista', 'contas_pagar', 'L,V,E,I,A'),
  ('Dentista', 'contas_receber', 'L,V,E,I,A'),
  ('Dentista', 'caixa', 'L,V,E,I,A'),
  ('Dentista', 'cheques', 'L,V,E,I,A'),
  ('Dentista', 'pagamentos', 'L'),
  ('Dentista', 'arquivos_clinica', 'L'),
  ('Dentista', 'manuais', 'L'),
  ('Dentista', 'contatos', 'L,V,I'),
  ('Dentista', 'backup_gerar', 'L'),
  ('Dentista', 'backup_restaurar', 'L'),
  ('Dentista', 'informacoes', 'V'),
  ('Dentista', 'idiomas', 'V'),
  ('Funcionario', 'profissionais', 'L,V'),
  ('Funcionario', 'pacientes', 'L,V,E,I,A'),
  ('Funcionario', 'funcionarios', 'L,V'),
  ('Funcionario', 'fornecedores', 'L,V,E,I'),
  ('Funcionario', 'agenda', ''),
  ('Funcionario', 'patrimonio', ''),
  ('Funcionario', 'estoque', 'L,V,E,I,A'),
  ('Funcionario', 'laboratorios', 'L,V,E,I'),
  ('Funcionario', 'convenios', 'L,V'),
  ('Funcionario', 'honorarios', 'L,V'),
  ('Funcionario', 'contas_pagar', ''),
  ('Funcionario', 'contas_receber', ''),
  ('Funcionario', 'caixa', ''),
  ('Funcionario', 'cheques', ''),
  ('Funcionario', 'pagamentos', 'L'),
  ('Funcionario', 'arquivos_clinica', 'L'),
  ('Funcionario', 'manuais', 'L'),
  ('Funcionario', 'contatos', 'L,V,I'),
  ('Funcionario', 'backup_gerar', 'L'),
  ('Funcionario', 'backup_restaurar', ''),
  ('Funcionario', 'informacoes', 'V'),
  ('Funcionario', 'idiomas', 'V');

# ############################

#
# Estrutura da tabela `procedimentos_orcamento`
#

CREATE TABLE IF NOT EXISTS `procedimentos_orcamento` (
  `codigo` int(10) NOT NULL auto_increment,
  `codigo_orcamento` int(10) NOT NULL,
  `codigoprocedimento` varchar(10) default NULL,
  `dente` varchar(15) default NULL,
  `descricao` varchar(150) default NULL,
  `particular` float default NULL,
  `convenio` float default NULL,
  PRIMARY KEY  (`codigo`)
) ENGINE=InnoDB;

# ############################

#
# Estrutura da tabela `radiografias`
#

CREATE TABLE IF NOT EXISTS `radiografias` (
  `codigo` int(11) NOT NULL AUTO_INCREMENT,
  `codigo_paciente` int(11) NOT NULL,
  `foto` longblob NOT NULL,
  `legenda` varchar(100) NOT NULL,
  `data` date DEFAULT NULL,
  `modelo` enum('Panoramica','Oclusal','Periapical','Interproximal','ATM','PA','AP','Lateral') NOT NULL,
  `diagnostico` text NOT NULL,
  PRIMARY KEY (`codigo`)
) ENGINE=InnoDB;

# ############################

#
# Estrutura da tabela `receitas`
#

CREATE TABLE IF NOT EXISTS `receitas` (
  `receita` longtext,
  `codigo_paciente` int(11) NOT NULL,
  PRIMARY KEY  (`codigo_paciente`)
) ENGINE=InnoDB;

# ############################

#
# Estrutura da tabela `telefones`
#

CREATE TABLE IF NOT EXISTS `telefones` (
  `codigo` int(10) NOT NULL auto_increment,
  `nome` varchar(80) default NULL,
  `endereco` varchar(50) default NULL,
  `bairro` varchar(50) default NULL,
  `cidade` varchar(50) default NULL,
  `estado` varchar(50) default NULL,
  `pais` varchar(50) default NULL,
  `cep` varchar(9) default NULL,
  `celular` varchar(15) default NULL,
  `telefone1` varchar(15) default NULL,
  `telefone2` varchar(15) default NULL,
  `email` varchar(150) default NULL,
  `website` varchar(150) default NULL,
  PRIMARY KEY  (`codigo`)
) ENGINE=InnoDB;

# ############################

#
# Estrutura para visualizar `v_agenda`
#

CREATE VIEW v_agenda AS ( SELECT tp.codigo AS codigo_paciente, ta.data AS data, ta.hora AS hora, ta.descricao AS descricao, ta.procedimento AS procedimento, ta.faltou AS faltou, td.nome AS nome_dentista, td.sexo AS sexo_dentista FROM agenda ta INNER JOIN pacientes tp ON tp.codigo = ta.codigo_paciente INNER JOIN dentistas td ON td.codigo = ta.codigo_dentista );

# ############################

#
# Estrutura para visualizar `v_evolucao`
#

CREATE VIEW v_evolucao AS ( SELECT tp.codigo AS codigo_paciente, tp.nome AS paciente, td.sexo AS sexo_dentista, td.nome AS dentista, te.procexecutado AS executado, te.procprevisto AS previsto, te.data AS data FROM evolucao te INNER JOIN dentistas td ON te.codigo_dentista = td.codigo INNER JOIN pacientes tp ON te.codigo_paciente = tp.codigo );

# ############################

#
# Estrutura para visualizar `v_orcamento`
#

CREATE VIEW v_orcamento AS ( SELECT tpo.codigo_orcamento AS codigo_orcamento, tor.parcelas AS parcelas, tor.confirmado AS confirmado, tor.baixa AS baixa, tpo.codigo AS codigo_parcela, tpo.datavencimento AS data, tpo.valor AS valor, tpo.pago AS pago, tpo.datapgto AS datapgto, tp.codigo AS codigo_paciente, tp.nome AS paciente, td.nome AS dentista, td.sexo AS sexo_dentista FROM parcelas_orcamento tpo INNER JOIN orcamento tor ON tpo.codigo_orcamento = tor.codigo INNER JOIN pacientes tp ON tor.codigo_paciente = tp.codigo JOIN dentistas td ON tor.codigo_dentista = td.codigo );

